pull_request_rules:
  - name: remove outdated reviews
    conditions:
      - base=master
    actions:
      dismiss_reviews: {}

  - name: Automatic merge when all checks pass and the PR is approved
    conditions:
      - "#approved-reviews-by>=1"
      - "-draft"
      - "status-success=basic-checks"
      - "status-success=end-to-end (smoke)"
      - "status-success=end-to-end (es)"
      - "status-success=end-to-end (cassandra)"
      - "status-success=end-to-end (streaming)"
      - "status-success=end-to-end (examples1)"
      - "status-success=end-to-end (examples2)"
      - "status-success=end-to-end (generate)"
      - "status-success=end-to-end (es-otel)"
      - "status-success=end-to-end (streaming-otel)"
      - "status-success=DCO"
      - "status-success=WIP"
      - "status-success=codecov/patch" # we don't require those, but we might want to manually check before automatically merging
      - "status-success=codecov/project"
    actions:
      merge:
        method: squash
        commit_message: title+body
        bot_account: jaegerci-bot
  - name: Kafka changes
    conditions:
    - files~=kafka
    actions:
      assign:
        users:
          - rubenvp8510
      request_reviews:
        users:
          - rubenvp8510
          - jpkrohling
  - name: Upgrade mechanism changes
    conditions:
    - files~=upgrade/
    actions:
      assign:
        users:
          - rubenvp8510
      request_reviews:
        users:
          - rubenvp8510
          - jpkrohling
  - name: Sidecar injection mechanism changes
    conditions:
    - files~=inject/
    actions:
      assign:
        users:
          - rubenvp8510
      request_reviews:
        users:
          - rubenvp8510
          - jpkrohling
  - name: Streaming changes
    conditions:
    - files~=streaming
    actions:
      assign:
        users:
          - objectiser
      request_reviews:
        users:
          - objectiser
          - jpkrohling
